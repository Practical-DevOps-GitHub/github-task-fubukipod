name: GitHub Topic

on:
  workflow_dispatch:

env:
  REPO: Practical-DevOps-GitHub/github-task-fubukipod
  OWNER: Practical-DevOps-GitHub
  COLLAB_USER: softservedata
  DEPLOY_KEY_TITLE: DEPLOY_KEY
  PAT: ${{ secrets.PAT }}
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

jobs:
  setup:
    name: GitHub Setup
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - uses: actions/checkout@v4
        with:
          token: ${{ env.PAT }}
          fetch-depth: 0

      - name: Create required files
        run: |
          mkdir -p .github
          echo "*   @${{ env.COLLAB_USER }}" > .github/CODEOWNERS
          cat <<'EOF' > .github/pull_request_template.md
          ## Describe your changes
          -

          ## Issue ticket number and link
          -

          ## Checklist before requesting a review
          - [ ] I have performed a self-review of my code
          - [ ] If it is a core feature, I have added thorough tests
          - [ ] Do we need to implement analytics?
          - [ ] Will this be part of a product update? If yes, describe briefly
          EOF

      - name: Commit & Push CODEOWNERS + Template
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          git add .github/CODEOWNERS .github/pull_request_template.md
          git commit -m "Add CODEOWNERS and PR template" || echo "No changes"
          git push https://x-access-token:${{ env.PAT }}@github.com/${{ env.REPO }} HEAD:main

      - name: Invite Collaborator
        run: |
          curl -s -X PUT \
            -H "Authorization: token ${{ env.PAT }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ env.REPO }}/collaborators/${{ env.COLLAB_USER }} \
            -d '{"permission":"push"}'

      - name: Create develop branch
        run: |
          git fetch origin main
          if ! git ls-remote --heads origin develop | grep develop; then
            git checkout -b develop origin/main
            git push origin develop
          fi
          sleep 5

      - name: Set develop as default
        run: |
          curl -s -X PATCH \
            -H "Authorization: token ${{ env.PAT }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ env.REPO }} \
            -d '{"default_branch":"develop"}'

      - name: Protect main
        run: |
          curl -s -X PUT \
            -H "Authorization: token ${{ env.PAT }}" \
            -H "Accept: application/vnd.github.luke-cage-preview+json" \
            https://api.github.com/repos/${{ env.REPO }}/branches/main/protection \
            -d '{"required_pull_request_reviews":{"required_approving_review_count":0,"require_code_owner_reviews":true},"enforce_admins":true,"restrictions":null,"required_status_checks":null}'

      - name: Protect develop
        run: |
          curl -s -X PUT \
            -H "Authorization: token ${{ env.PAT }}" \
            -H "Accept: application/vnd.github.luke-cage-preview+json" \
            https://api.github.com/repos/${{ env.REPO }}/branches/develop/protection \
            -d '{"required_pull_request_reviews":{"required_approving_review_count":2},"enforce_admins":true,"restrictions":null,"required_status_checks":null}'

      - name: Generate & Upload Deploy Key
        run: |
          ssh-keygen -t rsa -b 4096 -C "deploy_key" -f deploy_key -N ""
          PUB_KEY=$(cat deploy_key.pub)
          curl -s -X POST \
            -H "Authorization: token ${{ env.PAT }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ env.REPO }}/keys \
            -d "{\"title\":\"${{ env.DEPLOY_KEY_TITLE }}\",\"key\":\"$PUB_KEY\",\"read_only\":false}"

      - name: Create Project Board
        run: |
          project_id=$(curl -s -X POST \
            -H "Authorization: token ${{ env.PAT }}" \
            -H "Accept: application/vnd.github.inertia-preview+json" \
            https://api.github.com/repos/${{ env.REPO }}/projects \
            -d '{"name":"Automated Project","body":"Board created by GitHub Action"}' | jq -r '.id')
          curl -s -X POST \
            -H "Authorization: token ${{ env.PAT }}" \
            -H "Accept: application/vnd.github.inertia-preview+json" \
            https://api.github.com/projects/$project_id/columns \
            -d '{"name":"To Do"}'

      - name: Discord Notification
        if: always()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ env.DISCORD_WEBHOOK }}
        with:
          args: |
            **New GitHub Setup Completed for github-task-fubukipod**
            CODEOWNERS & PR Template added
            Branch Protections Applied
            Develop Branch Set as Default
            Deploy Key Created
            Project Board Created
